<!DOCTYPE html>
<html lang="{{@site.locale}}">

<head>

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="{{asset "built/index.css"}}" />
    <link rel="preconnect" href="https://fonts.gstatic.com" />
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
    <script src="{{asset "built/index.js"}}" defer></script>

    <title>{{meta_title}}</title>

    {{ghost_head}}
    {{!-- Outputs important meta data and settings, should always be in <head> --}}

</head>

<body class="{{body_class}}">
    <canvas class="fx-grain" id="canvas"></canvas>
        <script>
        var viewWidth,
            viewHeight,
            canvas = document.getElementById("canvas"),
            ctx;

        // change these settings
        var patternSize = 256,
            patternScaleX = 1,
            patternScaleY = 1,
            patternRefreshInterval = 4,
            patternAlpha = 20; // int between 0 and 255,

        var patternPixelDataLength = patternSize * patternSize * 4,
            patternCanvas,
            patternCtx,
            patternData,
            frame = 0;

        window.onload = function() {
            initCanvas();
            initGrain();
            requestAnimationFrame(loop);
        };

        // create a canvas which will render the grain
        function initCanvas() {
            viewWidth = canvas.width = canvas.clientWidth;
            viewHeight = canvas.height = canvas.clientHeight;
            ctx = canvas.getContext('2d');

            ctx.scale(patternScaleX, patternScaleY);
        }

        // create a canvas which will be used as a pattern
        function initGrain() {
            patternCanvas = document.createElement('canvas');
            patternCanvas.width = patternSize;
            patternCanvas.height = patternSize;
            patternCtx = patternCanvas.getContext('2d');
            patternData = patternCtx.createImageData(patternSize, patternSize);
        }

        // put a random shade of gray into every pixel of the pattern
        function update() {
            var value;

            for (var i = 0; i < patternPixelDataLength; i += 4) {
                value = (Math.random() * 255) | 0;

                patternData.data[i    ] = value;
                patternData.data[i + 1] = value;
                patternData.data[i + 2] = value;
                patternData.data[i + 3] = patternAlpha;
            }

            patternCtx.putImageData(patternData, 0, 0);
        }

        // fill the canvas using the pattern
        function draw() {
            ctx.clearRect(0, 0, viewWidth, viewHeight);

            ctx.fillStyle = ctx.createPattern(patternCanvas, 'repeat');
            ctx.fillRect(0, 0, viewWidth, viewHeight);
        }

        function loop() {
            if (++frame % patternRefreshInterval === 0) {
                update();
                draw();
            }

            requestAnimationFrame(loop);
        }
    </script>
    <div class="gh-viewport">
        <header>
            <nav>
                <div class="mb">
                    <a class="gh-head-logo" href="{{@site.url}}">
                        {{#if @site.logo}}
                            <img src="{{@site.logo}}" alt="{{@site.title}}" />
                        {{else}}
                        <div class="header-wrapper">
                            <div class="header-title">
                                {{@site.title}}
                            </div>
                            <div class="header-subtitle">
                                {{@site.description}}
                            </div>
                        </div>
                        {{/if}}
                    </a>

                    <div class="mb-wrapper">
                        {{navigation}}
                        <div class="mb-contact-wrapper"><a class="mb-contact" href="mailto:jacksonhvisuals@gmail.com">Contact</a></div>
                    </div>
                </div>
            </nav>
        </header>

        <main class="gh-main">

            {{{body}}}
            {{!-- All content gets inserted here, index.hbs, post.hbs, etc --}}

        </main>

        <footer class="gh-foot">
            <div class="gh-container">
                <div class="gh-foot-menu">
                    {{navigation type="secondary"}}
                </div>
                <div class="gh-foot-meta">
                    Made with <a href="https://ghost.org" target="_blank" rel="noopener">Ghost</a> and <a class="theme-hover" href="/" target="_blank" rel="noopener">Sublight</a>
                </div>
            </div>
        </footer>

    </div>

    {{!-- <foot> --}}
    {{ghost_foot}}
    {{!-- Outputs important scripts - should always be included before closing body tag --}}

</body>

</html>